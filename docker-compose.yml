
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - btfv
    env_file:
      - .env.dev

  scraper:
    build:
      context: .
      dockerfile: src/scraper/Dockerfile
    environment:
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
      - PYTHONPATH=${PYTHONPATH}
      - LOGGING_ENV=${LOGGING_ENV}
      - SCRAPER_INTERVAL=${SCRAPER_INTERVAL}
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
      - ./entrypoint.sh:/app/entrypoint.sh
    entrypoint: ["/app/entrypoint.sh", "scraper"]
    depends_on:
      - db
    env_file:
      - .env.dev

  web:
    build:
      context: .
      dockerfile: src/web_app/Dockerfile
    environment:
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
      - PYTHONPATH=${PYTHONPATH}
      - LOGGING_ENV=${LOGGING_ENV}
      - FLASK_DEBUG=1
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data:/app/data
      - ./src:/app/src
      - ./.env:/app/.env
      - ./entrypoint.sh:/app/entrypoint.sh
    entrypoint: ["/app/entrypoint.sh", "web"]
    depends_on:
      - db
    networks:
      - btfv
    ports:
      - "8000:8000"
    env_file:
      - .env.dev

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - btfv
    env_file:
      - .env.dev

networks:
  btfv:

volumes:
  db-data:
